"use strict";(self.webpackChunkguide_pycord_dev=self.webpackChunkguide_pycord_dev||[]).push([[9232],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(n),m=i,f=s["".concat(l,".").concat(m)]||s[m]||d[m]||o;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[s]="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6042:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return s}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={title:"Voice"},l=void 0,p={unversionedId:"voice/index",id:"voice/index",title:"Voice",description:"Welcome to the guide for voice features in Pycord.",source:"@site/docs/voice/index.mdx",sourceDirName:"voice",slug:"/voice/",permalink:"/voice/",draft:!1,editUrl:"https://github.com/Pycord-Development/guide/tree/main/docs/voice/index.mdx",tags:[],version:"current",lastUpdatedBy:"Lala Sabathil",lastUpdatedAt:1713441056,formattedLastUpdatedAt:"Apr 18, 2024",frontMatter:{title:"Voice"},sidebar:"defaultSidebar",previous:{title:"Tasks",permalink:"/extensions/tasks/"},next:{title:"Wavelink Audio Player",permalink:"/voice/playing"}},u={},s=[{value:"Requirements",id:"requirements",level:2}],d={toc:s},m="wrapper";function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Welcome to the guide for voice features in Pycord."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This guide requires previous experience with Pycord and Python.")),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"The only requirement which is required for voice features is ",(0,o.kt)("a",{parentName:"p",href:"https://pypi.org/project/PyNaCl/"},(0,o.kt)("inlineCode",{parentName:"a"},"PyNaCl")),".\nThe following features are optional:"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Opus is also a required library, but this comes with Pycord.\nSome hosts may not come with it, though, so remember to always check if required dependencies are installed.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://ffmpeg.org"},(0,o.kt)("inlineCode",{parentName:"a"},"FFmpeg"))," - used for sending/receiving files other than ",(0,o.kt)("inlineCode",{parentName:"li"},".pcm")," and ",(0,o.kt)("inlineCode",{parentName:"li"},".wav")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Pycord-Development/Pycord.Wavelink"},(0,o.kt)("inlineCode",{parentName:"a"},"Pycord.Wavelink")),",\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Devoxin/Lavalink.py"},(0,o.kt)("inlineCode",{parentName:"a"},"Lavalink.py")),",\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/PythonistaGuild/Wavelink"},(0,o.kt)("inlineCode",{parentName:"a"},"Wavelink"))," or any other Python LavaLink library for music playback.")))}f.isMDXComponent=!0}}]);